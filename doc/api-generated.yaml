openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
      - App
  /user:
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'
      tags:
      - Users
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags:
      - Users
  /user/{id}:
    get:
      operationId: UserController_findById
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags:
      - Users
    put:
      operationId: UserController_updatePassword
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
      tags:
      - Users
    delete:
      operationId: UserController_delete
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Users
  /artist:
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      tags:
      - Artist
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Artist
  /artist/{id}:
    get:
      operationId: ArtistController_findById
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Artist
    put:
      operationId: ArtistController_update
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Artist
    delete:
      operationId: ArtistController_delete
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Artist
  /album:
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      tags:
      - Album
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Album
  /album/{id}:
    get:
      operationId: AlbumController_findById
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Album
    put:
      operationId: AlbumController_update
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Album
    delete:
      operationId: AlbumController_delete
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Album
  /track:
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      tags:
      - Track
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Track
  /track/{id}:
    get:
      operationId: TrackController_findById
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Track
    put:
      operationId: TrackController_update
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
      - Track
    delete:
      operationId: TrackController_delete
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Track
  /favs:
    get:
      operationId: FavoritesController_getFavorites
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoritesResponseDto'
      tags:
      - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '201':
          description: ''
      tags:
      - Favorites
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Favorites
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '201':
          description: ''
      tags:
      - Favorites
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Favorites
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '201':
          description: ''
      tags:
      - Favorites
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - Favorites
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    UserResponseDto:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
        password:
          type: string
        version:
          type: number
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
      - id
      - login
      - password
      - version
      - createdAt
      - updatedAt
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
      - login
      - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
      - oldPassword
      - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
      - name
      - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
      - name
      - year
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
      - name
      - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
    FavoritesResponseDto:
      type: object
      properties:
        artists:
          type: array
          items:
            type: object
        albums:
          type: array
          items:
            type: object
        tracks:
          type: array
          items:
            type: object
      required:
      - artists
      - albums
      - tracks
